Useless nonterminals

   WriteStmt


Useless rules

   32 WriteStmt: WRITE ID SEMICOLON


State 3 conflicts: 2 shift/reduce, 1 reduce/reduce
State 44 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList
    2        | VarDeclList StmtList

    3 VarDeclList: /* empty */
    4            | VarDecl VarDeclList

    5 VarDecl: TYPE ID SEMICOLON

    6 FuncDeclList: /* empty */
    7             | FuncDecl FuncDeclList

    8 FuncSignature: FUNC TYPE ID

    9 @1: /* empty */

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block

   11 ParamList: /* empty */
   12          | Param
   13          | Param COMMA ParamList

   14 Param: TYPE ID

   15 @2: /* empty */

   16 @3: /* empty */

   17 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 RBRACK

   18 ReturnStmt: RETURN Expr SEMICOLON

   19 StmtList: /* empty */
   20         | Stmt StmtList

   21 Stmt: ID EQ Expr SEMICOLON
   22     | WRITE ID SEMICOLON
   23     | ID LPAREN RPAREN SEMICOLON

   24 Expr: Expr BinOp Expr
   25     | ID
   26     | NUMBER
   27     | ID LPAREN RPAREN

   28 BinOp: PLUS
   29      | MINUS
   30      | STAR
   31      | BSLASH


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 5 8 14
ID (259) 5 8 14 21 22 23 25 27
SEMICOLON (260) 5 18 21 22 23
LBRACK (261) 17
RBRACK (262) 17
LPAREN (263) 10 23 27
RPAREN (264) 10 23 27
COMMA (265) 13
EQ (266) 21
PLUS (267) 28
MINUS (268) 29
STAR (269) 30
BSLASH (270) 31
NUMBER (271) 26
WRITE (272) 22
RETURN (273) 18
FUNC (274) 8


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Program (21)
    on left: 1 2, on right: 0
VarDeclList (22)
    on left: 3 4, on right: 1 2 4 17
VarDecl (23)
    on left: 5, on right: 4
FuncDeclList (24)
    on left: 6 7, on right: 1 7
FuncSignature (25)
    on left: 8, on right: 10
FuncDecl (26)
    on left: 10, on right: 7
@1 (27)
    on left: 9, on right: 10
ParamList (28)
    on left: 11 12 13, on right: 10 13
Param (29)
    on left: 14, on right: 12 13
Block (30)
    on left: 17, on right: 10
@2 (31)
    on left: 15, on right: 17
@3 (32)
    on left: 16, on right: 17
ReturnStmt (33)
    on left: 18, on right: 17
StmtList (34)
    on left: 19 20, on right: 1 2 17 20
Stmt (35)
    on left: 21 22 23, on right: 20
Expr (36)
    on left: 24 25 26 27, on right: 18 21 24
BinOp (37)
    on left: 28 29 30 31, on right: 24


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    5 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . FuncDeclList StmtList
    2        | VarDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8
    FUNC   shift, and go to state 9

    $end      reduce using rule 6 (FuncDeclList)
    $end      [reduce using rule 19 (StmtList)]
    ID        [reduce using rule 6 (FuncDeclList)]
    WRITE     [reduce using rule 6 (FuncDeclList)]
    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList   go to state 10
    FuncSignature  go to state 11
    FuncDecl       go to state 12
    StmtList       go to state 13
    Stmt           go to state 14


state 4

    4 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 15
    VarDecl      go to state 4


state 5

    5 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 16


state 6

    0 $accept: Program $end .

    $default  accept


state 7

   21 Stmt: ID . EQ Expr SEMICOLON
   23     | ID . LPAREN RPAREN SEMICOLON

    LPAREN  shift, and go to state 17
    EQ      shift, and go to state 18


state 8

   22 Stmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 19


state 9

    8 FuncSignature: FUNC . TYPE ID

    TYPE  shift, and go to state 20


state 10

    1 Program: VarDeclList FuncDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 19 (StmtList)

    StmtList  go to state 21
    Stmt      go to state 14


state 11

   10 FuncDecl: FuncSignature . @1 LPAREN ParamList RPAREN Block

    $default  reduce using rule 9 (@1)

    @1  go to state 22


state 12

    7 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 9

    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList   go to state 23
    FuncSignature  go to state 11
    FuncDecl       go to state 12


state 13

    2 Program: VarDeclList StmtList .

    $default  reduce using rule 2 (Program)


state 14

   20 StmtList: Stmt . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 19 (StmtList)

    StmtList  go to state 24
    Stmt      go to state 14


state 15

    4 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 4 (VarDeclList)


state 16

    5 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 5 (VarDecl)


state 17

   23 Stmt: ID LPAREN . RPAREN SEMICOLON

    RPAREN  shift, and go to state 25


state 18

   21 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 26
    NUMBER  shift, and go to state 27

    Expr  go to state 28


state 19

   22 Stmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 29


state 20

    8 FuncSignature: FUNC TYPE . ID

    ID  shift, and go to state 30


state 21

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 22

   10 FuncDecl: FuncSignature @1 . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 31


state 23

    7 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 7 (FuncDeclList)


state 24

   20 StmtList: Stmt StmtList .

    $default  reduce using rule 20 (StmtList)


state 25

   23 Stmt: ID LPAREN RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 32


state 26

   25 Expr: ID .
   27     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 33

    $default  reduce using rule 25 (Expr)


state 27

   26 Expr: NUMBER .

    $default  reduce using rule 26 (Expr)


state 28

   21 Stmt: ID EQ Expr . SEMICOLON
   24 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 34
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    STAR       shift, and go to state 37
    BSLASH     shift, and go to state 38

    BinOp  go to state 39


state 29

   22 Stmt: WRITE ID SEMICOLON .

    $default  reduce using rule 22 (Stmt)


state 30

    8 FuncSignature: FUNC TYPE ID .

    $default  reduce using rule 8 (FuncSignature)


state 31

   10 FuncDecl: FuncSignature @1 LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 40

    $default  reduce using rule 11 (ParamList)

    ParamList  go to state 41
    Param      go to state 42


state 32

   23 Stmt: ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 23 (Stmt)


state 33

   27 Expr: ID LPAREN . RPAREN

    RPAREN  shift, and go to state 43


state 34

   21 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 21 (Stmt)


state 35

   28 BinOp: PLUS .

    $default  reduce using rule 28 (BinOp)


state 36

   29 BinOp: MINUS .

    $default  reduce using rule 29 (BinOp)


state 37

   30 BinOp: STAR .

    $default  reduce using rule 30 (BinOp)


state 38

   31 BinOp: BSLASH .

    $default  reduce using rule 31 (BinOp)


state 39

   24 Expr: Expr BinOp . Expr

    ID      shift, and go to state 26
    NUMBER  shift, and go to state 27

    Expr  go to state 44


state 40

   14 Param: TYPE . ID

    ID  shift, and go to state 45


state 41

   10 FuncDecl: FuncSignature @1 LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 46


state 42

   12 ParamList: Param .
   13          | Param . COMMA ParamList

    COMMA  shift, and go to state 47

    $default  reduce using rule 12 (ParamList)


state 43

   27 Expr: ID LPAREN RPAREN .

    $default  reduce using rule 27 (Expr)


state 44

   24 Expr: Expr . BinOp Expr
   24     | Expr BinOp Expr .

    PLUS    shift, and go to state 35
    MINUS   shift, and go to state 36
    STAR    shift, and go to state 37
    BSLASH  shift, and go to state 38

    PLUS      [reduce using rule 24 (Expr)]
    MINUS     [reduce using rule 24 (Expr)]
    STAR      [reduce using rule 24 (Expr)]
    BSLASH    [reduce using rule 24 (Expr)]
    $default  reduce using rule 24 (Expr)

    BinOp  go to state 39


state 45

   14 Param: TYPE ID .

    $default  reduce using rule 14 (Param)


state 46

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN . Block

    LBRACK  shift, and go to state 48

    Block  go to state 49


state 47

   13 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 40

    $default  reduce using rule 11 (ParamList)

    ParamList  go to state 50
    Param      go to state 42


state 48

   17 Block: LBRACK . @2 VarDeclList StmtList ReturnStmt @3 RBRACK

    $default  reduce using rule 15 (@2)

    @2  go to state 51


state 49

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block .

    $default  reduce using rule 10 (FuncDecl)


state 50

   13 ParamList: Param COMMA ParamList .

    $default  reduce using rule 13 (ParamList)


state 51

   17 Block: LBRACK @2 . VarDeclList StmtList ReturnStmt @3 RBRACK

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 52
    VarDecl      go to state 4


state 52

   17 Block: LBRACK @2 VarDeclList . StmtList ReturnStmt @3 RBRACK

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 19 (StmtList)

    StmtList  go to state 53
    Stmt      go to state 14


state 53

   17 Block: LBRACK @2 VarDeclList StmtList . ReturnStmt @3 RBRACK

    RETURN  shift, and go to state 54

    ReturnStmt  go to state 55


state 54

   18 ReturnStmt: RETURN . Expr SEMICOLON

    ID      shift, and go to state 26
    NUMBER  shift, and go to state 27

    Expr  go to state 56


state 55

   17 Block: LBRACK @2 VarDeclList StmtList ReturnStmt . @3 RBRACK

    $default  reduce using rule 16 (@3)

    @3  go to state 57


state 56

   18 ReturnStmt: RETURN Expr . SEMICOLON
   24 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 58
    PLUS       shift, and go to state 35
    MINUS      shift, and go to state 36
    STAR       shift, and go to state 37
    BSLASH     shift, and go to state 38

    BinOp  go to state 39


state 57

   17 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 . RBRACK

    RBRACK  shift, and go to state 59


state 58

   18 ReturnStmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 18 (ReturnStmt)


state 59

   17 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 RBRACK .

    $default  reduce using rule 17 (Block)
