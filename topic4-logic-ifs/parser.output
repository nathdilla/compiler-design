Terminals which are not used

   DOT
   IF


State 3 conflicts: 2 shift/reduce, 1 reduce/reduce
State 58 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList
    2        | VarDeclList StmtList

    3 ArrayDeclList: /* empty */
    4              | ArrayDecl ArrayDeclList

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    6 VarDeclList: /* empty */
    7            | VarDecl VarDeclList

    8 VarDecl: TYPE ID SEMICOLON

    9 FuncDeclList: /* empty */
   10             | FuncDecl FuncDeclList

   11 FuncSignature: FUNC TYPE ID

   12 @1: /* empty */

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block

   14 ParamList: /* empty */
   15          | Param
   16          | Param COMMA ParamList

   17 Param: TYPE ID

   18 InputParamList: /* empty */
   19               | InputParam
   20               | InputParam COMMA InputParamList

   21 InputParam: ID
   22           | NUMBER

   23 @2: /* empty */

   24 @3: /* empty */

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList StmtList ReturnStmt @3 RCURBRACK

   26 ReturnStmt: RETURN Expr SEMICOLON

   27 StmtList: /* empty */
   28         | Stmt StmtList

   29 Stmt: ID EQ Expr SEMICOLON
   30     | WriteStmt
   31     | ID LPAREN InputParamList RPAREN SEMICOLON
   32     | ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON

   33 Expr: Expr BinOp Expr
   34     | ID
   35     | FLOAT
   36     | NUMBER
   37     | ID LPAREN InputParamList RPAREN
   38     | ID LBRACK NUMBER RBRACK

   39 BinOp: PLUS
   40      | MINUS
   41      | STAR
   42      | BSLASH

   43 WriteStmt: WRITE ID SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 5 8 11 17
ID (259) 5 8 11 17 21 29 31 32 34 37 38 43
SEMICOLON (260) 5 8 26 29 31 32 43
LBRACK (261) 5 32 38
RBRACK (262) 5 32 38
LCURBRACK (263) 25
RCURBRACK (264) 25
LPAREN (265) 13 31 37
RPAREN (266) 13 31 37
COMMA (267) 16 20
DOT (268)
EQ (269) 29 32
PLUS (270) 39
MINUS (271) 40
STAR (272) 41
BSLASH (273) 42
NUMBER (274) 5 22 32 36 38
FLOAT (275) 35
WRITE (276) 43
RETURN (277) 26
FUNC (278) 11
ARRAY (279) 5
IF (280)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
Program (27)
    on left: 1 2, on right: 0
ArrayDeclList (28)
    on left: 3 4, on right: 4 25
ArrayDecl (29)
    on left: 5, on right: 4
VarDeclList (30)
    on left: 6 7, on right: 1 2 7 25
VarDecl (31)
    on left: 8, on right: 7
FuncDeclList (32)
    on left: 9 10, on right: 1 10
FuncSignature (33)
    on left: 11, on right: 13
FuncDecl (34)
    on left: 13, on right: 10
@1 (35)
    on left: 12, on right: 13
ParamList (36)
    on left: 14 15 16, on right: 13 16
Param (37)
    on left: 17, on right: 15 16
InputParamList (38)
    on left: 18 19 20, on right: 20 31 37
InputParam (39)
    on left: 21 22, on right: 19 20
Block (40)
    on left: 25, on right: 13
@2 (41)
    on left: 23, on right: 25
@3 (42)
    on left: 24, on right: 25
ReturnStmt (43)
    on left: 26, on right: 25
StmtList (44)
    on left: 27 28, on right: 1 2 25 28
Stmt (45)
    on left: 29 30 31 32, on right: 28
Expr (46)
    on left: 33 34 35 36 37 38, on right: 26 29 32 33
BinOp (47)
    on left: 39 40 41 42, on right: 33
WriteStmt (48)
    on left: 43, on right: 30


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 6 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    8 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . FuncDeclList StmtList
    2        | VarDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8
    FUNC   shift, and go to state 9

    $end      reduce using rule 9 (FuncDeclList)
    $end      [reduce using rule 27 (StmtList)]
    ID        [reduce using rule 9 (FuncDeclList)]
    WRITE     [reduce using rule 9 (FuncDeclList)]
    $default  reduce using rule 9 (FuncDeclList)

    FuncDeclList   go to state 10
    FuncSignature  go to state 11
    FuncDecl       go to state 12
    StmtList       go to state 13
    Stmt           go to state 14
    WriteStmt      go to state 15


state 4

    7 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 6 (VarDeclList)

    VarDeclList  go to state 16
    VarDecl      go to state 4


state 5

    8 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 6

    0 $accept: Program $end .

    $default  accept


state 7

   29 Stmt: ID . EQ Expr SEMICOLON
   31     | ID . LPAREN InputParamList RPAREN SEMICOLON
   32     | ID . LBRACK NUMBER RBRACK EQ Expr SEMICOLON

    LBRACK  shift, and go to state 18
    LPAREN  shift, and go to state 19
    EQ      shift, and go to state 20


state 8

   43 WriteStmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 21


state 9

   11 FuncSignature: FUNC . TYPE ID

    TYPE  shift, and go to state 22


state 10

    1 Program: VarDeclList FuncDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 27 (StmtList)

    StmtList   go to state 23
    Stmt       go to state 14
    WriteStmt  go to state 15


state 11

   13 FuncDecl: FuncSignature . @1 LPAREN ParamList RPAREN Block

    $default  reduce using rule 12 (@1)

    @1  go to state 24


state 12

   10 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 9

    $default  reduce using rule 9 (FuncDeclList)

    FuncDeclList   go to state 25
    FuncSignature  go to state 11
    FuncDecl       go to state 12


state 13

    2 Program: VarDeclList StmtList .

    $default  reduce using rule 2 (Program)


state 14

   28 StmtList: Stmt . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 27 (StmtList)

    StmtList   go to state 26
    Stmt       go to state 14
    WriteStmt  go to state 15


state 15

   30 Stmt: WriteStmt .

    $default  reduce using rule 30 (Stmt)


state 16

    7 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 7 (VarDeclList)


state 17

    8 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 8 (VarDecl)


state 18

   32 Stmt: ID LBRACK . NUMBER RBRACK EQ Expr SEMICOLON

    NUMBER  shift, and go to state 27


state 19

   31 Stmt: ID LPAREN . InputParamList RPAREN SEMICOLON

    ID      shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 30
    InputParam      go to state 31


state 20

   29 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 32
    NUMBER  shift, and go to state 33
    FLOAT   shift, and go to state 34

    Expr  go to state 35


state 21

   43 WriteStmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 36


state 22

   11 FuncSignature: FUNC TYPE . ID

    ID  shift, and go to state 37


state 23

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 24

   13 FuncDecl: FuncSignature @1 . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 38


state 25

   10 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 10 (FuncDeclList)


state 26

   28 StmtList: Stmt StmtList .

    $default  reduce using rule 28 (StmtList)


state 27

   32 Stmt: ID LBRACK NUMBER . RBRACK EQ Expr SEMICOLON

    RBRACK  shift, and go to state 39


state 28

   21 InputParam: ID .

    $default  reduce using rule 21 (InputParam)


state 29

   22 InputParam: NUMBER .

    $default  reduce using rule 22 (InputParam)


state 30

   31 Stmt: ID LPAREN InputParamList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 40


state 31

   19 InputParamList: InputParam .
   20               | InputParam . COMMA InputParamList

    COMMA  shift, and go to state 41

    $default  reduce using rule 19 (InputParamList)


state 32

   34 Expr: ID .
   37     | ID . LPAREN InputParamList RPAREN
   38     | ID . LBRACK NUMBER RBRACK

    LBRACK  shift, and go to state 42
    LPAREN  shift, and go to state 43

    $default  reduce using rule 34 (Expr)


state 33

   36 Expr: NUMBER .

    $default  reduce using rule 36 (Expr)


state 34

   35 Expr: FLOAT .

    $default  reduce using rule 35 (Expr)


state 35

   29 Stmt: ID EQ Expr . SEMICOLON
   33 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 44
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    STAR       shift, and go to state 47
    BSLASH     shift, and go to state 48

    BinOp  go to state 49


state 36

   43 WriteStmt: WRITE ID SEMICOLON .

    $default  reduce using rule 43 (WriteStmt)


state 37

   11 FuncSignature: FUNC TYPE ID .

    $default  reduce using rule 11 (FuncSignature)


state 38

   13 FuncDecl: FuncSignature @1 LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 50

    $default  reduce using rule 14 (ParamList)

    ParamList  go to state 51
    Param      go to state 52


state 39

   32 Stmt: ID LBRACK NUMBER RBRACK . EQ Expr SEMICOLON

    EQ  shift, and go to state 53


state 40

   31 Stmt: ID LPAREN InputParamList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 54


state 41

   20 InputParamList: InputParam COMMA . InputParamList

    ID      shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 55
    InputParam      go to state 31


state 42

   38 Expr: ID LBRACK . NUMBER RBRACK

    NUMBER  shift, and go to state 56


state 43

   37 Expr: ID LPAREN . InputParamList RPAREN

    ID      shift, and go to state 28
    NUMBER  shift, and go to state 29

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 57
    InputParam      go to state 31


state 44

   29 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 29 (Stmt)


state 45

   39 BinOp: PLUS .

    $default  reduce using rule 39 (BinOp)


state 46

   40 BinOp: MINUS .

    $default  reduce using rule 40 (BinOp)


state 47

   41 BinOp: STAR .

    $default  reduce using rule 41 (BinOp)


state 48

   42 BinOp: BSLASH .

    $default  reduce using rule 42 (BinOp)


state 49

   33 Expr: Expr BinOp . Expr

    ID      shift, and go to state 32
    NUMBER  shift, and go to state 33
    FLOAT   shift, and go to state 34

    Expr  go to state 58


state 50

   17 Param: TYPE . ID

    ID  shift, and go to state 59


state 51

   13 FuncDecl: FuncSignature @1 LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 60


state 52

   15 ParamList: Param .
   16          | Param . COMMA ParamList

    COMMA  shift, and go to state 61

    $default  reduce using rule 15 (ParamList)


state 53

   32 Stmt: ID LBRACK NUMBER RBRACK EQ . Expr SEMICOLON

    ID      shift, and go to state 32
    NUMBER  shift, and go to state 33
    FLOAT   shift, and go to state 34

    Expr  go to state 62


state 54

   31 Stmt: ID LPAREN InputParamList RPAREN SEMICOLON .

    $default  reduce using rule 31 (Stmt)


state 55

   20 InputParamList: InputParam COMMA InputParamList .

    $default  reduce using rule 20 (InputParamList)


state 56

   38 Expr: ID LBRACK NUMBER . RBRACK

    RBRACK  shift, and go to state 63


state 57

   37 Expr: ID LPAREN InputParamList . RPAREN

    RPAREN  shift, and go to state 64


state 58

   33 Expr: Expr . BinOp Expr
   33     | Expr BinOp Expr .

    PLUS    shift, and go to state 45
    MINUS   shift, and go to state 46
    STAR    shift, and go to state 47
    BSLASH  shift, and go to state 48

    PLUS      [reduce using rule 33 (Expr)]
    MINUS     [reduce using rule 33 (Expr)]
    STAR      [reduce using rule 33 (Expr)]
    BSLASH    [reduce using rule 33 (Expr)]
    $default  reduce using rule 33 (Expr)

    BinOp  go to state 49


state 59

   17 Param: TYPE ID .

    $default  reduce using rule 17 (Param)


state 60

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN . Block

    LCURBRACK  shift, and go to state 65

    Block  go to state 66


state 61

   16 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 50

    $default  reduce using rule 14 (ParamList)

    ParamList  go to state 67
    Param      go to state 52


state 62

   32 Stmt: ID LBRACK NUMBER RBRACK EQ Expr . SEMICOLON
   33 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 68
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    STAR       shift, and go to state 47
    BSLASH     shift, and go to state 48

    BinOp  go to state 49


state 63

   38 Expr: ID LBRACK NUMBER RBRACK .

    $default  reduce using rule 38 (Expr)


state 64

   37 Expr: ID LPAREN InputParamList RPAREN .

    $default  reduce using rule 37 (Expr)


state 65

   25 Block: LCURBRACK . @2 VarDeclList ArrayDeclList StmtList ReturnStmt @3 RCURBRACK

    $default  reduce using rule 23 (@2)

    @2  go to state 69


state 66

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block .

    $default  reduce using rule 13 (FuncDecl)


state 67

   16 ParamList: Param COMMA ParamList .

    $default  reduce using rule 16 (ParamList)


state 68

   32 Stmt: ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON .

    $default  reduce using rule 32 (Stmt)


state 69

   25 Block: LCURBRACK @2 . VarDeclList ArrayDeclList StmtList ReturnStmt @3 RCURBRACK

    TYPE  shift, and go to state 1

    $default  reduce using rule 6 (VarDeclList)

    VarDeclList  go to state 70
    VarDecl      go to state 4


state 70

   25 Block: LCURBRACK @2 VarDeclList . ArrayDeclList StmtList ReturnStmt @3 RCURBRACK

    ARRAY  shift, and go to state 71

    $default  reduce using rule 3 (ArrayDeclList)

    ArrayDeclList  go to state 72
    ArrayDecl      go to state 73


state 71

    5 ArrayDecl: ARRAY . TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    TYPE  shift, and go to state 74


state 72

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList . StmtList ReturnStmt @3 RCURBRACK

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 27 (StmtList)

    StmtList   go to state 75
    Stmt       go to state 14
    WriteStmt  go to state 15


state 73

    4 ArrayDeclList: ArrayDecl . ArrayDeclList

    ARRAY  shift, and go to state 71

    $default  reduce using rule 3 (ArrayDeclList)

    ArrayDeclList  go to state 76
    ArrayDecl      go to state 73


state 74

    5 ArrayDecl: ARRAY TYPE . ID LBRACK NUMBER RBRACK SEMICOLON

    ID  shift, and go to state 77


state 75

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList StmtList . ReturnStmt @3 RCURBRACK

    RETURN  shift, and go to state 78

    ReturnStmt  go to state 79


state 76

    4 ArrayDeclList: ArrayDecl ArrayDeclList .

    $default  reduce using rule 4 (ArrayDeclList)


state 77

    5 ArrayDecl: ARRAY TYPE ID . LBRACK NUMBER RBRACK SEMICOLON

    LBRACK  shift, and go to state 80


state 78

   26 ReturnStmt: RETURN . Expr SEMICOLON

    ID      shift, and go to state 32
    NUMBER  shift, and go to state 33
    FLOAT   shift, and go to state 34

    Expr  go to state 81


state 79

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList StmtList ReturnStmt . @3 RCURBRACK

    $default  reduce using rule 24 (@3)

    @3  go to state 82


state 80

    5 ArrayDecl: ARRAY TYPE ID LBRACK . NUMBER RBRACK SEMICOLON

    NUMBER  shift, and go to state 83


state 81

   26 ReturnStmt: RETURN Expr . SEMICOLON
   33 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 84
    PLUS       shift, and go to state 45
    MINUS      shift, and go to state 46
    STAR       shift, and go to state 47
    BSLASH     shift, and go to state 48

    BinOp  go to state 49


state 82

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList StmtList ReturnStmt @3 . RCURBRACK

    RCURBRACK  shift, and go to state 85


state 83

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER . RBRACK SEMICOLON

    RBRACK  shift, and go to state 86


state 84

   26 ReturnStmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 26 (ReturnStmt)


state 85

   25 Block: LCURBRACK @2 VarDeclList ArrayDeclList StmtList ReturnStmt @3 RCURBRACK .

    $default  reduce using rule 25 (Block)


state 86

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 87


state 87

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON .

    $default  reduce using rule 5 (ArrayDecl)
