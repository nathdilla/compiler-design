Useless nonterminals

   WriteStmt


Useless rules

   37 WriteStmt: WRITE ID SEMICOLON


State 3 conflicts: 2 shift/reduce, 1 reduce/reduce
State 50 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList
    2        | VarDeclList StmtList

    3 VarDeclList: /* empty */
    4            | VarDecl VarDeclList

    5 VarDecl: TYPE ID SEMICOLON

    6 FuncDeclList: /* empty */
    7             | FuncDecl FuncDeclList

    8 FuncSignature: FUNC TYPE ID

    9 @1: /* empty */

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block

   11 ParamList: /* empty */
   12          | Param
   13          | Param COMMA ParamList

   14 Param: TYPE ID

   15 InputParamList: /* empty */
   16               | InputParam
   17               | InputParam COMMA InputParamList

   18 InputParam: ID
   19           | NUMBER

   20 @2: /* empty */

   21 @3: /* empty */

   22 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 RBRACK

   23 ReturnStmt: RETURN Expr SEMICOLON

   24 StmtList: /* empty */
   25         | Stmt StmtList

   26 Stmt: ID EQ Expr SEMICOLON
   27     | WRITE ID SEMICOLON
   28     | ID LPAREN InputParamList RPAREN SEMICOLON

   29 Expr: Expr BinOp Expr
   30     | ID
   31     | NUMBER
   32     | ID LPAREN InputParamList RPAREN

   33 BinOp: PLUS
   34      | MINUS
   35      | STAR
   36      | BSLASH


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 5 8 14
ID (259) 5 8 14 18 26 27 28 30 32
SEMICOLON (260) 5 23 26 27 28
LBRACK (261) 22
RBRACK (262) 22
LPAREN (263) 10 28 32
RPAREN (264) 10 28 32
COMMA (265) 13 17
EQ (266) 26
PLUS (267) 33
MINUS (268) 34
STAR (269) 35
BSLASH (270) 36
NUMBER (271) 19 31
WRITE (272) 27
RETURN (273) 23
FUNC (274) 8


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Program (21)
    on left: 1 2, on right: 0
VarDeclList (22)
    on left: 3 4, on right: 1 2 4 22
VarDecl (23)
    on left: 5, on right: 4
FuncDeclList (24)
    on left: 6 7, on right: 1 7
FuncSignature (25)
    on left: 8, on right: 10
FuncDecl (26)
    on left: 10, on right: 7
@1 (27)
    on left: 9, on right: 10
ParamList (28)
    on left: 11 12 13, on right: 10 13
Param (29)
    on left: 14, on right: 12 13
InputParamList (30)
    on left: 15 16 17, on right: 17 28 32
InputParam (31)
    on left: 18 19, on right: 16 17
Block (32)
    on left: 22, on right: 10
@2 (33)
    on left: 20, on right: 22
@3 (34)
    on left: 21, on right: 22
ReturnStmt (35)
    on left: 23, on right: 22
StmtList (36)
    on left: 24 25, on right: 1 2 22 25
Stmt (37)
    on left: 26 27 28, on right: 25
Expr (38)
    on left: 29 30 31 32, on right: 23 26 29
BinOp (39)
    on left: 33 34 35 36, on right: 29


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    5 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . FuncDeclList StmtList
    2        | VarDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8
    FUNC   shift, and go to state 9

    $end      reduce using rule 6 (FuncDeclList)
    $end      [reduce using rule 24 (StmtList)]
    ID        [reduce using rule 6 (FuncDeclList)]
    WRITE     [reduce using rule 6 (FuncDeclList)]
    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList   go to state 10
    FuncSignature  go to state 11
    FuncDecl       go to state 12
    StmtList       go to state 13
    Stmt           go to state 14


state 4

    4 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 15
    VarDecl      go to state 4


state 5

    5 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 16


state 6

    0 $accept: Program $end .

    $default  accept


state 7

   26 Stmt: ID . EQ Expr SEMICOLON
   28     | ID . LPAREN InputParamList RPAREN SEMICOLON

    LPAREN  shift, and go to state 17
    EQ      shift, and go to state 18


state 8

   27 Stmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 19


state 9

    8 FuncSignature: FUNC . TYPE ID

    TYPE  shift, and go to state 20


state 10

    1 Program: VarDeclList FuncDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 24 (StmtList)

    StmtList  go to state 21
    Stmt      go to state 14


state 11

   10 FuncDecl: FuncSignature . @1 LPAREN ParamList RPAREN Block

    $default  reduce using rule 9 (@1)

    @1  go to state 22


state 12

    7 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 9

    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList   go to state 23
    FuncSignature  go to state 11
    FuncDecl       go to state 12


state 13

    2 Program: VarDeclList StmtList .

    $default  reduce using rule 2 (Program)


state 14

   25 StmtList: Stmt . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 24 (StmtList)

    StmtList  go to state 24
    Stmt      go to state 14


state 15

    4 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 4 (VarDeclList)


state 16

    5 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 5 (VarDecl)


state 17

   28 Stmt: ID LPAREN . InputParamList RPAREN SEMICOLON

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    $default  reduce using rule 15 (InputParamList)

    InputParamList  go to state 27
    InputParam      go to state 28


state 18

   26 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 29
    NUMBER  shift, and go to state 30

    Expr  go to state 31


state 19

   27 Stmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 32


state 20

    8 FuncSignature: FUNC TYPE . ID

    ID  shift, and go to state 33


state 21

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 22

   10 FuncDecl: FuncSignature @1 . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 34


state 23

    7 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 7 (FuncDeclList)


state 24

   25 StmtList: Stmt StmtList .

    $default  reduce using rule 25 (StmtList)


state 25

   18 InputParam: ID .

    $default  reduce using rule 18 (InputParam)


state 26

   19 InputParam: NUMBER .

    $default  reduce using rule 19 (InputParam)


state 27

   28 Stmt: ID LPAREN InputParamList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 35


state 28

   16 InputParamList: InputParam .
   17               | InputParam . COMMA InputParamList

    COMMA  shift, and go to state 36

    $default  reduce using rule 16 (InputParamList)


state 29

   30 Expr: ID .
   32     | ID . LPAREN InputParamList RPAREN

    LPAREN  shift, and go to state 37

    $default  reduce using rule 30 (Expr)


state 30

   31 Expr: NUMBER .

    $default  reduce using rule 31 (Expr)


state 31

   26 Stmt: ID EQ Expr . SEMICOLON
   29 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 38
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    STAR       shift, and go to state 41
    BSLASH     shift, and go to state 42

    BinOp  go to state 43


state 32

   27 Stmt: WRITE ID SEMICOLON .

    $default  reduce using rule 27 (Stmt)


state 33

    8 FuncSignature: FUNC TYPE ID .

    $default  reduce using rule 8 (FuncSignature)


state 34

   10 FuncDecl: FuncSignature @1 LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 44

    $default  reduce using rule 11 (ParamList)

    ParamList  go to state 45
    Param      go to state 46


state 35

   28 Stmt: ID LPAREN InputParamList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 47


state 36

   17 InputParamList: InputParam COMMA . InputParamList

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    $default  reduce using rule 15 (InputParamList)

    InputParamList  go to state 48
    InputParam      go to state 28


state 37

   32 Expr: ID LPAREN . InputParamList RPAREN

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    $default  reduce using rule 15 (InputParamList)

    InputParamList  go to state 49
    InputParam      go to state 28


state 38

   26 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 26 (Stmt)


state 39

   33 BinOp: PLUS .

    $default  reduce using rule 33 (BinOp)


state 40

   34 BinOp: MINUS .

    $default  reduce using rule 34 (BinOp)


state 41

   35 BinOp: STAR .

    $default  reduce using rule 35 (BinOp)


state 42

   36 BinOp: BSLASH .

    $default  reduce using rule 36 (BinOp)


state 43

   29 Expr: Expr BinOp . Expr

    ID      shift, and go to state 29
    NUMBER  shift, and go to state 30

    Expr  go to state 50


state 44

   14 Param: TYPE . ID

    ID  shift, and go to state 51


state 45

   10 FuncDecl: FuncSignature @1 LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 52


state 46

   12 ParamList: Param .
   13          | Param . COMMA ParamList

    COMMA  shift, and go to state 53

    $default  reduce using rule 12 (ParamList)


state 47

   28 Stmt: ID LPAREN InputParamList RPAREN SEMICOLON .

    $default  reduce using rule 28 (Stmt)


state 48

   17 InputParamList: InputParam COMMA InputParamList .

    $default  reduce using rule 17 (InputParamList)


state 49

   32 Expr: ID LPAREN InputParamList . RPAREN

    RPAREN  shift, and go to state 54


state 50

   29 Expr: Expr . BinOp Expr
   29     | Expr BinOp Expr .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    STAR    shift, and go to state 41
    BSLASH  shift, and go to state 42

    PLUS      [reduce using rule 29 (Expr)]
    MINUS     [reduce using rule 29 (Expr)]
    STAR      [reduce using rule 29 (Expr)]
    BSLASH    [reduce using rule 29 (Expr)]
    $default  reduce using rule 29 (Expr)

    BinOp  go to state 43


state 51

   14 Param: TYPE ID .

    $default  reduce using rule 14 (Param)


state 52

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN . Block

    LBRACK  shift, and go to state 55

    Block  go to state 56


state 53

   13 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 44

    $default  reduce using rule 11 (ParamList)

    ParamList  go to state 57
    Param      go to state 46


state 54

   32 Expr: ID LPAREN InputParamList RPAREN .

    $default  reduce using rule 32 (Expr)


state 55

   22 Block: LBRACK . @2 VarDeclList StmtList ReturnStmt @3 RBRACK

    $default  reduce using rule 20 (@2)

    @2  go to state 58


state 56

   10 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block .

    $default  reduce using rule 10 (FuncDecl)


state 57

   13 ParamList: Param COMMA ParamList .

    $default  reduce using rule 13 (ParamList)


state 58

   22 Block: LBRACK @2 . VarDeclList StmtList ReturnStmt @3 RBRACK

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 59
    VarDecl      go to state 4


state 59

   22 Block: LBRACK @2 VarDeclList . StmtList ReturnStmt @3 RBRACK

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 24 (StmtList)

    StmtList  go to state 60
    Stmt      go to state 14


state 60

   22 Block: LBRACK @2 VarDeclList StmtList . ReturnStmt @3 RBRACK

    RETURN  shift, and go to state 61

    ReturnStmt  go to state 62


state 61

   23 ReturnStmt: RETURN . Expr SEMICOLON

    ID      shift, and go to state 29
    NUMBER  shift, and go to state 30

    Expr  go to state 63


state 62

   22 Block: LBRACK @2 VarDeclList StmtList ReturnStmt . @3 RBRACK

    $default  reduce using rule 21 (@3)

    @3  go to state 64


state 63

   23 ReturnStmt: RETURN Expr . SEMICOLON
   29 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 65
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    STAR       shift, and go to state 41
    BSLASH     shift, and go to state 42

    BinOp  go to state 43


state 64

   22 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 . RBRACK

    RBRACK  shift, and go to state 66


state 65

   23 ReturnStmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 23 (ReturnStmt)


state 66

   22 Block: LBRACK @2 VarDeclList StmtList ReturnStmt @3 RBRACK .

    $default  reduce using rule 22 (Block)
