Terminals which are not used

   RETURN


State 3 conflicts: 2 shift/reduce, 1 reduce/reduce
State 35 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList
    2        | VarDeclList StmtList

    3 VarDeclList: /* empty */
    4            | VarDecl VarDeclList

    5 VarDecl: TYPE ID SEMICOLON

    6 FuncDeclList: /* empty */
    7             | FuncDecl FuncDeclList

    8 FuncDecl: FUNC TYPE ID LPAREN ParamList RPAREN Block

    9 ParamList: /* empty */
   10          | Param
   11          | Param COMMA ParamList

   12 Param: TYPE ID

   13 @1: /* empty */

   14 @2: /* empty */

   15 Block: LBRACK @1 VarDeclList StmtList @2 RBRACK

   16 StmtList: /* empty */
   17         | Stmt StmtList

   18 Stmt: ID EQ Expr SEMICOLON
   19     | WriteStmt

   20 Expr: Expr BinOp Expr
   21     | ID
   22     | NUMBER

   23 BinOp: PLUS
   24      | MINUS
   25      | STAR
   26      | BSLASH

   27 WriteStmt: WRITE ID SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 5 8 12
ID (259) 5 8 12 18 21 27
SEMICOLON (260) 5 18 27
LBRACK (261) 15
RBRACK (262) 15
LPAREN (263) 8
RPAREN (264) 8
COMMA (265) 11
EQ (266) 18
PLUS (267) 23
MINUS (268) 24
STAR (269) 25
BSLASH (270) 26
NUMBER (271) 22
WRITE (272) 27
RETURN (273)
FUNC (274) 8


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
Program (21)
    on left: 1 2, on right: 0
VarDeclList (22)
    on left: 3 4, on right: 1 2 4 15
VarDecl (23)
    on left: 5, on right: 4
FuncDeclList (24)
    on left: 6 7, on right: 1 7
FuncDecl (25)
    on left: 8, on right: 7
ParamList (26)
    on left: 9 10 11, on right: 8 11
Param (27)
    on left: 12, on right: 10 11
Block (28)
    on left: 15, on right: 8
@1 (29)
    on left: 13, on right: 15
@2 (30)
    on left: 14, on right: 15
StmtList (31)
    on left: 16 17, on right: 1 2 15 17
Stmt (32)
    on left: 18 19, on right: 17
Expr (33)
    on left: 20 21 22, on right: 18 20
BinOp (34)
    on left: 23 24 25 26, on right: 20
WriteStmt (35)
    on left: 27, on right: 19


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    5 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . FuncDeclList StmtList
    2        | VarDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8
    FUNC   shift, and go to state 9

    $end      reduce using rule 6 (FuncDeclList)
    $end      [reduce using rule 16 (StmtList)]
    ID        [reduce using rule 6 (FuncDeclList)]
    WRITE     [reduce using rule 6 (FuncDeclList)]
    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList  go to state 10
    FuncDecl      go to state 11
    StmtList      go to state 12
    Stmt          go to state 13
    WriteStmt     go to state 14


state 4

    4 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 15
    VarDecl      go to state 4


state 5

    5 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 16


state 6

    0 $accept: Program $end .

    $default  accept


state 7

   18 Stmt: ID . EQ Expr SEMICOLON

    EQ  shift, and go to state 17


state 8

   27 WriteStmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 18


state 9

    8 FuncDecl: FUNC . TYPE ID LPAREN ParamList RPAREN Block

    TYPE  shift, and go to state 19


state 10

    1 Program: VarDeclList FuncDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 16 (StmtList)

    StmtList   go to state 20
    Stmt       go to state 13
    WriteStmt  go to state 14


state 11

    7 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 9

    $default  reduce using rule 6 (FuncDeclList)

    FuncDeclList  go to state 21
    FuncDecl      go to state 11


state 12

    2 Program: VarDeclList StmtList .

    $default  reduce using rule 2 (Program)


state 13

   17 StmtList: Stmt . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 16 (StmtList)

    StmtList   go to state 22
    Stmt       go to state 13
    WriteStmt  go to state 14


state 14

   19 Stmt: WriteStmt .

    $default  reduce using rule 19 (Stmt)


state 15

    4 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 4 (VarDeclList)


state 16

    5 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 5 (VarDecl)


state 17

   18 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 23
    NUMBER  shift, and go to state 24

    Expr  go to state 25


state 18

   27 WriteStmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 26


state 19

    8 FuncDecl: FUNC TYPE . ID LPAREN ParamList RPAREN Block

    ID  shift, and go to state 27


state 20

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 21

    7 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 7 (FuncDeclList)


state 22

   17 StmtList: Stmt StmtList .

    $default  reduce using rule 17 (StmtList)


state 23

   21 Expr: ID .

    $default  reduce using rule 21 (Expr)


state 24

   22 Expr: NUMBER .

    $default  reduce using rule 22 (Expr)


state 25

   18 Stmt: ID EQ Expr . SEMICOLON
   20 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 28
    PLUS       shift, and go to state 29
    MINUS      shift, and go to state 30
    STAR       shift, and go to state 31
    BSLASH     shift, and go to state 32

    BinOp  go to state 33


state 26

   27 WriteStmt: WRITE ID SEMICOLON .

    $default  reduce using rule 27 (WriteStmt)


state 27

    8 FuncDecl: FUNC TYPE ID . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 34


state 28

   18 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 18 (Stmt)


state 29

   23 BinOp: PLUS .

    $default  reduce using rule 23 (BinOp)


state 30

   24 BinOp: MINUS .

    $default  reduce using rule 24 (BinOp)


state 31

   25 BinOp: STAR .

    $default  reduce using rule 25 (BinOp)


state 32

   26 BinOp: BSLASH .

    $default  reduce using rule 26 (BinOp)


state 33

   20 Expr: Expr BinOp . Expr

    ID      shift, and go to state 23
    NUMBER  shift, and go to state 24

    Expr  go to state 35


state 34

    8 FuncDecl: FUNC TYPE ID LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 36

    $default  reduce using rule 9 (ParamList)

    ParamList  go to state 37
    Param      go to state 38


state 35

   20 Expr: Expr . BinOp Expr
   20     | Expr BinOp Expr .

    PLUS    shift, and go to state 29
    MINUS   shift, and go to state 30
    STAR    shift, and go to state 31
    BSLASH  shift, and go to state 32

    PLUS      [reduce using rule 20 (Expr)]
    MINUS     [reduce using rule 20 (Expr)]
    STAR      [reduce using rule 20 (Expr)]
    BSLASH    [reduce using rule 20 (Expr)]
    $default  reduce using rule 20 (Expr)

    BinOp  go to state 33


state 36

   12 Param: TYPE . ID

    ID  shift, and go to state 39


state 37

    8 FuncDecl: FUNC TYPE ID LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 40


state 38

   10 ParamList: Param .
   11          | Param . COMMA ParamList

    COMMA  shift, and go to state 41

    $default  reduce using rule 10 (ParamList)


state 39

   12 Param: TYPE ID .

    $default  reduce using rule 12 (Param)


state 40

    8 FuncDecl: FUNC TYPE ID LPAREN ParamList RPAREN . Block

    LBRACK  shift, and go to state 42

    Block  go to state 43


state 41

   11 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 36

    $default  reduce using rule 9 (ParamList)

    ParamList  go to state 44
    Param      go to state 38


state 42

   15 Block: LBRACK . @1 VarDeclList StmtList @2 RBRACK

    $default  reduce using rule 13 (@1)

    @1  go to state 45


state 43

    8 FuncDecl: FUNC TYPE ID LPAREN ParamList RPAREN Block .

    $default  reduce using rule 8 (FuncDecl)


state 44

   11 ParamList: Param COMMA ParamList .

    $default  reduce using rule 11 (ParamList)


state 45

   15 Block: LBRACK @1 . VarDeclList StmtList @2 RBRACK

    TYPE  shift, and go to state 1

    $default  reduce using rule 3 (VarDeclList)

    VarDeclList  go to state 46
    VarDecl      go to state 4


state 46

   15 Block: LBRACK @1 VarDeclList . StmtList @2 RBRACK

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 16 (StmtList)

    StmtList   go to state 47
    Stmt       go to state 13
    WriteStmt  go to state 14


state 47

   15 Block: LBRACK @1 VarDeclList StmtList . @2 RBRACK

    $default  reduce using rule 14 (@2)

    @2  go to state 48


state 48

   15 Block: LBRACK @1 VarDeclList StmtList @2 . RBRACK

    RBRACK  shift, and go to state 49


state 49

   15 Block: LBRACK @1 VarDeclList StmtList @2 RBRACK .

    $default  reduce using rule 15 (Block)
