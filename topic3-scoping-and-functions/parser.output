State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList StmtList

    2 VarDeclList: /* empty */
    3            | VarDecl VarDeclList

    4 VarDecl: TYPE ID SEMICOLON
    5        | TYPE ID

    6 StmtList: /* empty */
    7         | Stmt StmtList

    8 Stmt: ID EQ Expr SEMICOLON
    9     | WRITE ID SEMICOLON

   10 Expr: Expr BinOp Expr
   11     | ID
   12     | NUMBER

   13 BinOp: PLUS


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 4 5
ID (259) 4 5 8 9 11
SEMICOLON (260) 4 8 9
EQ (261) 8
PLUS (262) 13
NUMBER (263) 12
WRITE (264) 9


Nonterminals, with rules where they appear

$accept (10)
    on left: 0
Program (11)
    on left: 1, on right: 0
VarDeclList (12)
    on left: 2 3, on right: 1 3
VarDecl (13)
    on left: 4 5, on right: 3
StmtList (14)
    on left: 6 7, on right: 1 7
Stmt (15)
    on left: 8 9, on right: 7
Expr (16)
    on left: 10 11 12, on right: 8 10
BinOp (17)
    on left: 13, on right: 10


state 0

    0 $accept: . Program $end

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    Program      go to state 2
    VarDeclList  go to state 3
    VarDecl      go to state 4


state 1

    4 VarDecl: TYPE . ID SEMICOLON
    5        | TYPE . ID

    ID  shift, and go to state 5


state 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


state 3

    1 Program: VarDeclList . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 9
    Stmt      go to state 10


state 4

    3 VarDeclList: VarDecl . VarDeclList

    TYPE  shift, and go to state 1

    $default  reduce using rule 2 (VarDeclList)

    VarDeclList  go to state 11
    VarDecl      go to state 4


state 5

    4 VarDecl: TYPE ID . SEMICOLON
    5        | TYPE ID .

    SEMICOLON  shift, and go to state 12

    $default  reduce using rule 5 (VarDecl)


state 6

    0 $accept: Program $end .

    $default  accept


state 7

    8 Stmt: ID . EQ Expr SEMICOLON

    EQ  shift, and go to state 13


state 8

    9 Stmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 14


state 9

    1 Program: VarDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 10

    7 StmtList: Stmt . StmtList

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8

    $default  reduce using rule 6 (StmtList)

    StmtList  go to state 15
    Stmt      go to state 10


state 11

    3 VarDeclList: VarDecl VarDeclList .

    $default  reduce using rule 3 (VarDeclList)


state 12

    4 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 4 (VarDecl)


state 13

    8 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17

    Expr  go to state 18


state 14

    9 Stmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 19


state 15

    7 StmtList: Stmt StmtList .

    $default  reduce using rule 7 (StmtList)


state 16

   11 Expr: ID .

    $default  reduce using rule 11 (Expr)


state 17

   12 Expr: NUMBER .

    $default  reduce using rule 12 (Expr)


state 18

    8 Stmt: ID EQ Expr . SEMICOLON
   10 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 20
    PLUS       shift, and go to state 21

    BinOp  go to state 22


state 19

    9 Stmt: WRITE ID SEMICOLON .

    $default  reduce using rule 9 (Stmt)


state 20

    8 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 8 (Stmt)


state 21

   13 BinOp: PLUS .

    $default  reduce using rule 13 (BinOp)


state 22

   10 Expr: Expr BinOp . Expr

    ID      shift, and go to state 16
    NUMBER  shift, and go to state 17

    Expr  go to state 23


state 23

   10 Expr: Expr . BinOp Expr
   10     | Expr BinOp Expr .

    PLUS  shift, and go to state 21

    PLUS      [reduce using rule 10 (Expr)]
    $default  reduce using rule 10 (Expr)

    BinOp  go to state 22
