Terminals which are not used

   DOT
   NEQ
   LT
   GT
   LTEQ
   GTEQ
   AND
   OR
   NOT


State 2 conflicts: 3 shift/reduce, 1 reduce/reduce
State 73 conflicts: 4 shift/reduce
State 82 conflicts: 4 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList
    2        | VarDeclList StmtList

    3 ArrayDeclList: /* empty */
    4              | ArrayDecl ArrayDeclList

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    6 VarDeclList: /* empty */
    7            | VarDeclList VarDecl

    8 VarDecl: TYPE ID SEMICOLON

    9 FuncDeclList: /* empty */
   10             | FuncDecl FuncDeclList

   11 FuncSignature: FUNC TYPE ID

   12 @1: /* empty */

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block

   14 ParamList: /* empty */
   15          | Param
   16          | Param COMMA ParamList

   17 Param: TYPE ID

   18 InputParamList: /* empty */
   19               | InputParam
   20               | InputParam COMMA InputParamList

   21 InputParam: ID
   22           | NUMBER

   23 Block: LCURBRACK ArrayDeclList VarDeclList StmtList ReturnStmt RCURBRACK

   24 ReturnStmt: RETURN Expr SEMICOLON

   25 StmtList: /* empty */
   26         | Stmt StmtList

   27 Stmt: ID EQ Expr SEMICOLON
   28     | WriteStmt
   29     | ID LPAREN InputParamList RPAREN SEMICOLON
   30     | ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON
   31     | IfStmt

   32 Expr: Expr BinOp Expr
   33     | ID
   34     | LPAREN TYPE RPAREN Expr
   35     | FLOAT
   36     | BOOL
   37     | NUMBER
   38     | ID LPAREN InputParamList RPAREN
   39     | ID LBRACK NUMBER RBRACK

   40 BinOp: PLUS
   41      | MINUS
   42      | STAR
   43      | BSLASH

   44 WriteStmt: WRITE ID SEMICOLON

   45 LogicExpr: Expr EQEQ Expr

   46 IfStmt: IfStmtSignature IfBlock

   47 IfStmtSignature: IF LPAREN LogicExpr RPAREN

   48 IfBlock: LCURBRACK StmtList RCURBRACK SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 5 8 11 17 34
ID (259) 5 8 11 17 21 27 29 30 33 38 39 44
SEMICOLON (260) 5 8 24 27 29 30 44 48
LBRACK (261) 5 30 39
RBRACK (262) 5 30 39
LCURBRACK (263) 23 48
RCURBRACK (264) 23 48
LPAREN (265) 13 29 34 38 47
RPAREN (266) 13 29 34 38 47
COMMA (267) 16 20
DOT (268)
EQEQ (269) 45
NEQ (270)
LT (271)
GT (272)
LTEQ (273)
GTEQ (274)
AND (275)
OR (276)
NOT (277)
EQ (278) 27 30
PLUS (279) 40
MINUS (280) 41
STAR (281) 42
BSLASH (282) 43
BOOL (283) 36
NUMBER (284) 5 22 30 37 39
FLOAT (285) 35
WRITE (286) 44
RETURN (287) 24
FUNC (288) 11
ARRAY (289) 5
IF (290) 47


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
Program (37)
    on left: 1 2, on right: 0
ArrayDeclList (38)
    on left: 3 4, on right: 4 23
ArrayDecl (39)
    on left: 5, on right: 4
VarDeclList (40)
    on left: 6 7, on right: 1 2 7 23
VarDecl (41)
    on left: 8, on right: 7
FuncDeclList (42)
    on left: 9 10, on right: 1 10
FuncSignature (43)
    on left: 11, on right: 13
FuncDecl (44)
    on left: 13, on right: 10
@1 (45)
    on left: 12, on right: 13
ParamList (46)
    on left: 14 15 16, on right: 13 16
Param (47)
    on left: 17, on right: 15 16
InputParamList (48)
    on left: 18 19 20, on right: 20 29 38
InputParam (49)
    on left: 21 22, on right: 19 20
Block (50)
    on left: 23, on right: 13
ReturnStmt (51)
    on left: 24, on right: 23
StmtList (52)
    on left: 25 26, on right: 1 2 23 26 48
Stmt (53)
    on left: 27 28 29 30 31, on right: 26
Expr (54)
    on left: 32 33 34 35 36 37 38 39, on right: 24 27 30 32 34 45
BinOp (55)
    on left: 40 41 42 43, on right: 32
WriteStmt (56)
    on left: 44, on right: 28
LogicExpr (57)
    on left: 45, on right: 47
IfStmt (58)
    on left: 46, on right: 31
IfStmtSignature (59)
    on left: 47, on right: 46
IfBlock (60)
    on left: 48, on right: 46


state 0

    0 $accept: . Program $end

    $default  reduce using rule 6 (VarDeclList)

    Program      go to state 1
    VarDeclList  go to state 2


state 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


state 2

    1 Program: VarDeclList . FuncDeclList StmtList
    2        | VarDeclList . StmtList
    7 VarDeclList: VarDeclList . VarDecl

    TYPE   shift, and go to state 4
    ID     shift, and go to state 5
    WRITE  shift, and go to state 6
    FUNC   shift, and go to state 7
    IF     shift, and go to state 8

    $end      reduce using rule 9 (FuncDeclList)
    $end      [reduce using rule 25 (StmtList)]
    ID        [reduce using rule 9 (FuncDeclList)]
    WRITE     [reduce using rule 9 (FuncDeclList)]
    IF        [reduce using rule 9 (FuncDeclList)]
    $default  reduce using rule 9 (FuncDeclList)

    VarDecl          go to state 9
    FuncDeclList     go to state 10
    FuncSignature    go to state 11
    FuncDecl         go to state 12
    StmtList         go to state 13
    Stmt             go to state 14
    WriteStmt        go to state 15
    IfStmt           go to state 16
    IfStmtSignature  go to state 17


state 3

    0 $accept: Program $end .

    $default  accept


state 4

    8 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 18


state 5

   27 Stmt: ID . EQ Expr SEMICOLON
   29     | ID . LPAREN InputParamList RPAREN SEMICOLON
   30     | ID . LBRACK NUMBER RBRACK EQ Expr SEMICOLON

    LBRACK  shift, and go to state 19
    LPAREN  shift, and go to state 20
    EQ      shift, and go to state 21


state 6

   44 WriteStmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 22


state 7

   11 FuncSignature: FUNC . TYPE ID

    TYPE  shift, and go to state 23


state 8

   47 IfStmtSignature: IF . LPAREN LogicExpr RPAREN

    LPAREN  shift, and go to state 24


state 9

    7 VarDeclList: VarDeclList VarDecl .

    $default  reduce using rule 7 (VarDeclList)


state 10

    1 Program: VarDeclList FuncDeclList . StmtList

    ID     shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 8

    $default  reduce using rule 25 (StmtList)

    StmtList         go to state 25
    Stmt             go to state 14
    WriteStmt        go to state 15
    IfStmt           go to state 16
    IfStmtSignature  go to state 17


state 11

   13 FuncDecl: FuncSignature . @1 LPAREN ParamList RPAREN Block

    $default  reduce using rule 12 (@1)

    @1  go to state 26


state 12

   10 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 7

    $default  reduce using rule 9 (FuncDeclList)

    FuncDeclList   go to state 27
    FuncSignature  go to state 11
    FuncDecl       go to state 12


state 13

    2 Program: VarDeclList StmtList .

    $default  reduce using rule 2 (Program)


state 14

   26 StmtList: Stmt . StmtList

    ID     shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 8

    $default  reduce using rule 25 (StmtList)

    StmtList         go to state 28
    Stmt             go to state 14
    WriteStmt        go to state 15
    IfStmt           go to state 16
    IfStmtSignature  go to state 17


state 15

   28 Stmt: WriteStmt .

    $default  reduce using rule 28 (Stmt)


state 16

   31 Stmt: IfStmt .

    $default  reduce using rule 31 (Stmt)


state 17

   46 IfStmt: IfStmtSignature . IfBlock

    LCURBRACK  shift, and go to state 29

    IfBlock  go to state 30


state 18

    8 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 31


state 19

   30 Stmt: ID LBRACK . NUMBER RBRACK EQ Expr SEMICOLON

    NUMBER  shift, and go to state 32


state 20

   29 Stmt: ID LPAREN . InputParamList RPAREN SEMICOLON

    ID      shift, and go to state 33
    NUMBER  shift, and go to state 34

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 35
    InputParam      go to state 36


state 21

   27 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 42


state 22

   44 WriteStmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 43


state 23

   11 FuncSignature: FUNC TYPE . ID

    ID  shift, and go to state 44


state 24

   47 IfStmtSignature: IF LPAREN . LogicExpr RPAREN

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr       go to state 45
    LogicExpr  go to state 46


state 25

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 26

   13 FuncDecl: FuncSignature @1 . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 47


state 27

   10 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 10 (FuncDeclList)


state 28

   26 StmtList: Stmt StmtList .

    $default  reduce using rule 26 (StmtList)


state 29

   48 IfBlock: LCURBRACK . StmtList RCURBRACK SEMICOLON

    ID     shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 8

    $default  reduce using rule 25 (StmtList)

    StmtList         go to state 48
    Stmt             go to state 14
    WriteStmt        go to state 15
    IfStmt           go to state 16
    IfStmtSignature  go to state 17


state 30

   46 IfStmt: IfStmtSignature IfBlock .

    $default  reduce using rule 46 (IfStmt)


state 31

    8 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 8 (VarDecl)


state 32

   30 Stmt: ID LBRACK NUMBER . RBRACK EQ Expr SEMICOLON

    RBRACK  shift, and go to state 49


state 33

   21 InputParam: ID .

    $default  reduce using rule 21 (InputParam)


state 34

   22 InputParam: NUMBER .

    $default  reduce using rule 22 (InputParam)


state 35

   29 Stmt: ID LPAREN InputParamList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 50


state 36

   19 InputParamList: InputParam .
   20               | InputParam . COMMA InputParamList

    COMMA  shift, and go to state 51

    $default  reduce using rule 19 (InputParamList)


state 37

   33 Expr: ID .
   38     | ID . LPAREN InputParamList RPAREN
   39     | ID . LBRACK NUMBER RBRACK

    LBRACK  shift, and go to state 52
    LPAREN  shift, and go to state 53

    $default  reduce using rule 33 (Expr)


state 38

   34 Expr: LPAREN . TYPE RPAREN Expr

    TYPE  shift, and go to state 54


state 39

   36 Expr: BOOL .

    $default  reduce using rule 36 (Expr)


state 40

   37 Expr: NUMBER .

    $default  reduce using rule 37 (Expr)


state 41

   35 Expr: FLOAT .

    $default  reduce using rule 35 (Expr)


state 42

   27 Stmt: ID EQ Expr . SEMICOLON
   32 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 43

   44 WriteStmt: WRITE ID SEMICOLON .

    $default  reduce using rule 44 (WriteStmt)


state 44

   11 FuncSignature: FUNC TYPE ID .

    $default  reduce using rule 11 (FuncSignature)


state 45

   32 Expr: Expr . BinOp Expr
   45 LogicExpr: Expr . EQEQ Expr

    EQEQ    shift, and go to state 61
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    BinOp  go to state 60


state 46

   47 IfStmtSignature: IF LPAREN LogicExpr . RPAREN

    RPAREN  shift, and go to state 62


state 47

   13 FuncDecl: FuncSignature @1 LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 63

    $default  reduce using rule 14 (ParamList)

    ParamList  go to state 64
    Param      go to state 65


state 48

   48 IfBlock: LCURBRACK StmtList . RCURBRACK SEMICOLON

    RCURBRACK  shift, and go to state 66


state 49

   30 Stmt: ID LBRACK NUMBER RBRACK . EQ Expr SEMICOLON

    EQ  shift, and go to state 67


state 50

   29 Stmt: ID LPAREN InputParamList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 68


state 51

   20 InputParamList: InputParam COMMA . InputParamList

    ID      shift, and go to state 33
    NUMBER  shift, and go to state 34

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 69
    InputParam      go to state 36


state 52

   39 Expr: ID LBRACK . NUMBER RBRACK

    NUMBER  shift, and go to state 70


state 53

   38 Expr: ID LPAREN . InputParamList RPAREN

    ID      shift, and go to state 33
    NUMBER  shift, and go to state 34

    $default  reduce using rule 18 (InputParamList)

    InputParamList  go to state 71
    InputParam      go to state 36


state 54

   34 Expr: LPAREN TYPE . RPAREN Expr

    RPAREN  shift, and go to state 72


state 55

   27 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 27 (Stmt)


state 56

   40 BinOp: PLUS .

    $default  reduce using rule 40 (BinOp)


state 57

   41 BinOp: MINUS .

    $default  reduce using rule 41 (BinOp)


state 58

   42 BinOp: STAR .

    $default  reduce using rule 42 (BinOp)


state 59

   43 BinOp: BSLASH .

    $default  reduce using rule 43 (BinOp)


state 60

   32 Expr: Expr BinOp . Expr

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 73


state 61

   45 LogicExpr: Expr EQEQ . Expr

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 74


state 62

   47 IfStmtSignature: IF LPAREN LogicExpr RPAREN .

    $default  reduce using rule 47 (IfStmtSignature)


state 63

   17 Param: TYPE . ID

    ID  shift, and go to state 75


state 64

   13 FuncDecl: FuncSignature @1 LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 76


state 65

   15 ParamList: Param .
   16          | Param . COMMA ParamList

    COMMA  shift, and go to state 77

    $default  reduce using rule 15 (ParamList)


state 66

   48 IfBlock: LCURBRACK StmtList RCURBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 78


state 67

   30 Stmt: ID LBRACK NUMBER RBRACK EQ . Expr SEMICOLON

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 79


state 68

   29 Stmt: ID LPAREN InputParamList RPAREN SEMICOLON .

    $default  reduce using rule 29 (Stmt)


state 69

   20 InputParamList: InputParam COMMA InputParamList .

    $default  reduce using rule 20 (InputParamList)


state 70

   39 Expr: ID LBRACK NUMBER . RBRACK

    RBRACK  shift, and go to state 80


state 71

   38 Expr: ID LPAREN InputParamList . RPAREN

    RPAREN  shift, and go to state 81


state 72

   34 Expr: LPAREN TYPE RPAREN . Expr

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 82


state 73

   32 Expr: Expr . BinOp Expr
   32     | Expr BinOp Expr .

    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    PLUS      [reduce using rule 32 (Expr)]
    MINUS     [reduce using rule 32 (Expr)]
    STAR      [reduce using rule 32 (Expr)]
    BSLASH    [reduce using rule 32 (Expr)]
    $default  reduce using rule 32 (Expr)

    BinOp  go to state 60


state 74

   32 Expr: Expr . BinOp Expr
   45 LogicExpr: Expr EQEQ Expr .

    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 45 (LogicExpr)

    BinOp  go to state 60


state 75

   17 Param: TYPE ID .

    $default  reduce using rule 17 (Param)


state 76

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN . Block

    LCURBRACK  shift, and go to state 83

    Block  go to state 84


state 77

   16 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 63

    $default  reduce using rule 14 (ParamList)

    ParamList  go to state 85
    Param      go to state 65


state 78

   48 IfBlock: LCURBRACK StmtList RCURBRACK SEMICOLON .

    $default  reduce using rule 48 (IfBlock)


state 79

   30 Stmt: ID LBRACK NUMBER RBRACK EQ Expr . SEMICOLON
   32 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 86
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 80

   39 Expr: ID LBRACK NUMBER RBRACK .

    $default  reduce using rule 39 (Expr)


state 81

   38 Expr: ID LPAREN InputParamList RPAREN .

    $default  reduce using rule 38 (Expr)


state 82

   32 Expr: Expr . BinOp Expr
   34     | LPAREN TYPE RPAREN Expr .

    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    PLUS      [reduce using rule 34 (Expr)]
    MINUS     [reduce using rule 34 (Expr)]
    STAR      [reduce using rule 34 (Expr)]
    BSLASH    [reduce using rule 34 (Expr)]
    $default  reduce using rule 34 (Expr)

    BinOp  go to state 60


state 83

   23 Block: LCURBRACK . ArrayDeclList VarDeclList StmtList ReturnStmt RCURBRACK

    ARRAY  shift, and go to state 87

    $default  reduce using rule 3 (ArrayDeclList)

    ArrayDeclList  go to state 88
    ArrayDecl      go to state 89


state 84

   13 FuncDecl: FuncSignature @1 LPAREN ParamList RPAREN Block .

    $default  reduce using rule 13 (FuncDecl)


state 85

   16 ParamList: Param COMMA ParamList .

    $default  reduce using rule 16 (ParamList)


state 86

   30 Stmt: ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON .

    $default  reduce using rule 30 (Stmt)


state 87

    5 ArrayDecl: ARRAY . TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    TYPE  shift, and go to state 90


state 88

   23 Block: LCURBRACK ArrayDeclList . VarDeclList StmtList ReturnStmt RCURBRACK

    $default  reduce using rule 6 (VarDeclList)

    VarDeclList  go to state 91


state 89

    4 ArrayDeclList: ArrayDecl . ArrayDeclList

    ARRAY  shift, and go to state 87

    $default  reduce using rule 3 (ArrayDeclList)

    ArrayDeclList  go to state 92
    ArrayDecl      go to state 89


state 90

    5 ArrayDecl: ARRAY TYPE . ID LBRACK NUMBER RBRACK SEMICOLON

    ID  shift, and go to state 93


state 91

    7 VarDeclList: VarDeclList . VarDecl
   23 Block: LCURBRACK ArrayDeclList VarDeclList . StmtList ReturnStmt RCURBRACK

    TYPE   shift, and go to state 4
    ID     shift, and go to state 5
    WRITE  shift, and go to state 6
    IF     shift, and go to state 8

    $default  reduce using rule 25 (StmtList)

    VarDecl          go to state 9
    StmtList         go to state 94
    Stmt             go to state 14
    WriteStmt        go to state 15
    IfStmt           go to state 16
    IfStmtSignature  go to state 17


state 92

    4 ArrayDeclList: ArrayDecl ArrayDeclList .

    $default  reduce using rule 4 (ArrayDeclList)


state 93

    5 ArrayDecl: ARRAY TYPE ID . LBRACK NUMBER RBRACK SEMICOLON

    LBRACK  shift, and go to state 95


state 94

   23 Block: LCURBRACK ArrayDeclList VarDeclList StmtList . ReturnStmt RCURBRACK

    RETURN  shift, and go to state 96

    ReturnStmt  go to state 97


state 95

    5 ArrayDecl: ARRAY TYPE ID LBRACK . NUMBER RBRACK SEMICOLON

    NUMBER  shift, and go to state 98


state 96

   24 ReturnStmt: RETURN . Expr SEMICOLON

    ID      shift, and go to state 37
    LPAREN  shift, and go to state 38
    BOOL    shift, and go to state 39
    NUMBER  shift, and go to state 40
    FLOAT   shift, and go to state 41

    Expr  go to state 99


state 97

   23 Block: LCURBRACK ArrayDeclList VarDeclList StmtList ReturnStmt . RCURBRACK

    RCURBRACK  shift, and go to state 100


state 98

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER . RBRACK SEMICOLON

    RBRACK  shift, and go to state 101


state 99

   24 ReturnStmt: RETURN Expr . SEMICOLON
   32 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 102
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 100

   23 Block: LCURBRACK ArrayDeclList VarDeclList StmtList ReturnStmt RCURBRACK .

    $default  reduce using rule 23 (Block)


state 101

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 103


state 102

   24 ReturnStmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 24 (ReturnStmt)


state 103

    5 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON .

    $default  reduce using rule 5 (ArrayDecl)
