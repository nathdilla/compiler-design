Terminals which are not used

   DOT
   NEQ
   AND
   OR
   NOT


Rules never reduced

   58 ElseStmt: /* empty */


State 72 conflicts: 5 shift/reduce
State 88 conflicts: 5 shift/reduce
State 95 conflicts: 1 shift/reduce, 9 reduce/reduce
State 110 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: VarDeclList FuncDeclList StmtList

    2 ArrayDeclList: /* empty */
    3              | ArrayDecl ArrayDeclList

    4 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    5 VarDeclList: /* empty */
    6            | VarDeclList VarDecl

    7 VarDecl: TYPE ID SEMICOLON

    8 FuncDeclList: /* empty */
    9             | FuncDecl FuncDeclList

   10 @1: /* empty */

   11 FuncDecl: FUNC TYPE ID @1 LPAREN ParamList RPAREN Block

   12 ParamList: /* empty */
   13          | Param
   14          | Param COMMA ParamList

   15 Param: TYPE ID

   16 InputParamList: /* empty */
   17               | InputParam
   18               | InputParam COMMA InputParamList

   19 InputParam: ID
   20           | NUMBER

   21 Block: LCURBRACK ArrayDeclList VarDeclList StmtList RCURBRACK

   22 ReturnStmt: RETURN Expr SEMICOLON

   23 BreakStmt: BREAK SEMICOLON

   24 StmtList: /* empty */
   25         | Stmt StmtList
   26         | ReturnStmt StmtList
   27         | BreakStmt StmtList

   28 Stmt: ID EQ Expr SEMICOLON
   29     | WriteStmt
   30     | ID LPAREN InputParamList RPAREN SEMICOLON
   31     | ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON
   32     | IfStmt
   33     | WhileStmt

   34 Expr: Expr BinOp Expr
   35     | ID
   36     | LPAREN TYPE RPAREN Expr
   37     | FLOAT
   38     | BOOL
   39     | NUMBER
   40     | ID LPAREN InputParamList RPAREN
   41     | ID LBRACK NUMBER RBRACK

   42 BinOp: PLUS
   43      | MINUS
   44      | STAR
   45      | BSLASH
   46      | MOD

   47 WriteStmt: WRITE ID SEMICOLON

   48 LogicExpr: Expr EQEQ Expr
   49          | Expr GT Expr
   50          | Expr LT Expr
   51          | Expr GTEQ Expr
   52          | Expr LTEQ Expr

   53 WhileStmt: WHILE LPAREN LogicExpr RPAREN IfBlock

   54 IfStmt: IF LPAREN LogicExpr RPAREN IfBlock ElseIfList
   55       | IF LPAREN LogicExpr RPAREN IfBlock ElseStmt

   56 ElseIfList: /* empty */
   57           | ELSE IfStmt ElseIfList

   58 ElseStmt: /* empty */
   59         | ELSE IfBlock

   60 IfBlock: LCURBRACK StmtList RCURBRACK


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 4 7 11 15 36
ID (259) 4 7 11 15 19 28 30 31 35 40 41 47
SEMICOLON (260) 4 7 22 23 28 30 31 47
LBRACK (261) 4 31 41
RBRACK (262) 4 31 41
LCURBRACK (263) 21 60
RCURBRACK (264) 21 60
LPAREN (265) 11 30 36 40 53 54 55
RPAREN (266) 11 30 36 40 53 54 55
COMMA (267) 14 18
DOT (268)
EQEQ (269) 48
NEQ (270)
LT (271) 50
GT (272) 49
LTEQ (273) 52
GTEQ (274) 51
AND (275)
OR (276)
NOT (277)
MOD (278) 46
EQ (279) 28 31
PLUS (280) 42
MINUS (281) 43
STAR (282) 44
BSLASH (283) 45
BOOL (284) 38
NUMBER (285) 4 20 31 39 41
FLOAT (286) 37
WRITE (287) 47
RETURN (288) 22
FUNC (289) 11
ARRAY (290) 4
IF (291) 54 55
ELSE (292) 57 59
WHILE (293) 53
BREAK (294) 23


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
Program (41)
    on left: 1, on right: 0
ArrayDeclList (42)
    on left: 2 3, on right: 3 21
ArrayDecl (43)
    on left: 4, on right: 3
VarDeclList (44)
    on left: 5 6, on right: 1 6 21
VarDecl (45)
    on left: 7, on right: 6
FuncDeclList (46)
    on left: 8 9, on right: 1 9
FuncDecl (47)
    on left: 11, on right: 9
@1 (48)
    on left: 10, on right: 11
ParamList (49)
    on left: 12 13 14, on right: 11 14
Param (50)
    on left: 15, on right: 13 14
InputParamList (51)
    on left: 16 17 18, on right: 18 30 40
InputParam (52)
    on left: 19 20, on right: 17 18
Block (53)
    on left: 21, on right: 11
ReturnStmt (54)
    on left: 22, on right: 26
BreakStmt (55)
    on left: 23, on right: 27
StmtList (56)
    on left: 24 25 26 27, on right: 1 21 25 26 27 60
Stmt (57)
    on left: 28 29 30 31 32 33, on right: 25
Expr (58)
    on left: 34 35 36 37 38 39 40 41, on right: 22 28 31 34 36 48 49
    50 51 52
BinOp (59)
    on left: 42 43 44 45 46, on right: 34
WriteStmt (60)
    on left: 47, on right: 29
LogicExpr (61)
    on left: 48 49 50 51 52, on right: 53 54 55
WhileStmt (62)
    on left: 53, on right: 33
IfStmt (63)
    on left: 54 55, on right: 32 57
ElseIfList (64)
    on left: 56 57, on right: 54 57
ElseStmt (65)
    on left: 58 59, on right: 55
IfBlock (66)
    on left: 60, on right: 53 54 55 59


state 0

    0 $accept: . Program $end

    $default  reduce using rule 5 (VarDeclList)

    Program      go to state 1
    VarDeclList  go to state 2


state 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


state 2

    1 Program: VarDeclList . FuncDeclList StmtList
    6 VarDeclList: VarDeclList . VarDecl

    TYPE  shift, and go to state 4
    FUNC  shift, and go to state 5

    $default  reduce using rule 8 (FuncDeclList)

    VarDecl       go to state 6
    FuncDeclList  go to state 7
    FuncDecl      go to state 8


state 3

    0 $accept: Program $end .

    $default  accept


state 4

    7 VarDecl: TYPE . ID SEMICOLON

    ID  shift, and go to state 9


state 5

   11 FuncDecl: FUNC . TYPE ID @1 LPAREN ParamList RPAREN Block

    TYPE  shift, and go to state 10


state 6

    6 VarDeclList: VarDeclList VarDecl .

    $default  reduce using rule 6 (VarDeclList)


state 7

    1 Program: VarDeclList FuncDeclList . StmtList

    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 19
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 8

    9 FuncDeclList: FuncDecl . FuncDeclList

    FUNC  shift, and go to state 5

    $default  reduce using rule 8 (FuncDeclList)

    FuncDeclList  go to state 24
    FuncDecl      go to state 8


state 9

    7 VarDecl: TYPE ID . SEMICOLON

    SEMICOLON  shift, and go to state 25


state 10

   11 FuncDecl: FUNC TYPE . ID @1 LPAREN ParamList RPAREN Block

    ID  shift, and go to state 26


state 11

   28 Stmt: ID . EQ Expr SEMICOLON
   30     | ID . LPAREN InputParamList RPAREN SEMICOLON
   31     | ID . LBRACK NUMBER RBRACK EQ Expr SEMICOLON

    LBRACK  shift, and go to state 27
    LPAREN  shift, and go to state 28
    EQ      shift, and go to state 29


state 12

   47 WriteStmt: WRITE . ID SEMICOLON

    ID  shift, and go to state 30


state 13

   22 ReturnStmt: RETURN . Expr SEMICOLON

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 36


state 14

   54 IfStmt: IF . LPAREN LogicExpr RPAREN IfBlock ElseIfList
   55       | IF . LPAREN LogicExpr RPAREN IfBlock ElseStmt

    LPAREN  shift, and go to state 37


state 15

   53 WhileStmt: WHILE . LPAREN LogicExpr RPAREN IfBlock

    LPAREN  shift, and go to state 38


state 16

   23 BreakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 39


state 17

   26 StmtList: ReturnStmt . StmtList

    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 40
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 18

   27 StmtList: BreakStmt . StmtList

    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 41
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 19

    1 Program: VarDeclList FuncDeclList StmtList .

    $default  reduce using rule 1 (Program)


state 20

   25 StmtList: Stmt . StmtList

    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 42
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 21

   29 Stmt: WriteStmt .

    $default  reduce using rule 29 (Stmt)


state 22

   33 Stmt: WhileStmt .

    $default  reduce using rule 33 (Stmt)


state 23

   32 Stmt: IfStmt .

    $default  reduce using rule 32 (Stmt)


state 24

    9 FuncDeclList: FuncDecl FuncDeclList .

    $default  reduce using rule 9 (FuncDeclList)


state 25

    7 VarDecl: TYPE ID SEMICOLON .

    $default  reduce using rule 7 (VarDecl)


state 26

   11 FuncDecl: FUNC TYPE ID . @1 LPAREN ParamList RPAREN Block

    $default  reduce using rule 10 (@1)

    @1  go to state 43


state 27

   31 Stmt: ID LBRACK . NUMBER RBRACK EQ Expr SEMICOLON

    NUMBER  shift, and go to state 44


state 28

   30 Stmt: ID LPAREN . InputParamList RPAREN SEMICOLON

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 46

    $default  reduce using rule 16 (InputParamList)

    InputParamList  go to state 47
    InputParam      go to state 48


state 29

   28 Stmt: ID EQ . Expr SEMICOLON

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 49


state 30

   47 WriteStmt: WRITE ID . SEMICOLON

    SEMICOLON  shift, and go to state 50


state 31

   35 Expr: ID .
   40     | ID . LPAREN InputParamList RPAREN
   41     | ID . LBRACK NUMBER RBRACK

    LBRACK  shift, and go to state 51
    LPAREN  shift, and go to state 52

    $default  reduce using rule 35 (Expr)


state 32

   36 Expr: LPAREN . TYPE RPAREN Expr

    TYPE  shift, and go to state 53


state 33

   38 Expr: BOOL .

    $default  reduce using rule 38 (Expr)


state 34

   39 Expr: NUMBER .

    $default  reduce using rule 39 (Expr)


state 35

   37 Expr: FLOAT .

    $default  reduce using rule 37 (Expr)


state 36

   22 ReturnStmt: RETURN Expr . SEMICOLON
   34 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 54
    MOD        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 37

   54 IfStmt: IF LPAREN . LogicExpr RPAREN IfBlock ElseIfList
   55       | IF LPAREN . LogicExpr RPAREN IfBlock ElseStmt

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr       go to state 61
    LogicExpr  go to state 62


state 38

   53 WhileStmt: WHILE LPAREN . LogicExpr RPAREN IfBlock

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr       go to state 61
    LogicExpr  go to state 63


state 39

   23 BreakStmt: BREAK SEMICOLON .

    $default  reduce using rule 23 (BreakStmt)


state 40

   26 StmtList: ReturnStmt StmtList .

    $default  reduce using rule 26 (StmtList)


state 41

   27 StmtList: BreakStmt StmtList .

    $default  reduce using rule 27 (StmtList)


state 42

   25 StmtList: Stmt StmtList .

    $default  reduce using rule 25 (StmtList)


state 43

   11 FuncDecl: FUNC TYPE ID @1 . LPAREN ParamList RPAREN Block

    LPAREN  shift, and go to state 64


state 44

   31 Stmt: ID LBRACK NUMBER . RBRACK EQ Expr SEMICOLON

    RBRACK  shift, and go to state 65


state 45

   19 InputParam: ID .

    $default  reduce using rule 19 (InputParam)


state 46

   20 InputParam: NUMBER .

    $default  reduce using rule 20 (InputParam)


state 47

   30 Stmt: ID LPAREN InputParamList . RPAREN SEMICOLON

    RPAREN  shift, and go to state 66


state 48

   17 InputParamList: InputParam .
   18               | InputParam . COMMA InputParamList

    COMMA  shift, and go to state 67

    $default  reduce using rule 17 (InputParamList)


state 49

   28 Stmt: ID EQ Expr . SEMICOLON
   34 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 68
    MOD        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 50

   47 WriteStmt: WRITE ID SEMICOLON .

    $default  reduce using rule 47 (WriteStmt)


state 51

   41 Expr: ID LBRACK . NUMBER RBRACK

    NUMBER  shift, and go to state 69


state 52

   40 Expr: ID LPAREN . InputParamList RPAREN

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 46

    $default  reduce using rule 16 (InputParamList)

    InputParamList  go to state 70
    InputParam      go to state 48


state 53

   36 Expr: LPAREN TYPE . RPAREN Expr

    RPAREN  shift, and go to state 71


state 54

   22 ReturnStmt: RETURN Expr SEMICOLON .

    $default  reduce using rule 22 (ReturnStmt)


state 55

   46 BinOp: MOD .

    $default  reduce using rule 46 (BinOp)


state 56

   42 BinOp: PLUS .

    $default  reduce using rule 42 (BinOp)


state 57

   43 BinOp: MINUS .

    $default  reduce using rule 43 (BinOp)


state 58

   44 BinOp: STAR .

    $default  reduce using rule 44 (BinOp)


state 59

   45 BinOp: BSLASH .

    $default  reduce using rule 45 (BinOp)


state 60

   34 Expr: Expr BinOp . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 72


state 61

   34 Expr: Expr . BinOp Expr
   48 LogicExpr: Expr . EQEQ Expr
   49          | Expr . GT Expr
   50          | Expr . LT Expr
   51          | Expr . GTEQ Expr
   52          | Expr . LTEQ Expr

    EQEQ    shift, and go to state 73
    LT      shift, and go to state 74
    GT      shift, and go to state 75
    LTEQ    shift, and go to state 76
    GTEQ    shift, and go to state 77
    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    BinOp  go to state 60


state 62

   54 IfStmt: IF LPAREN LogicExpr . RPAREN IfBlock ElseIfList
   55       | IF LPAREN LogicExpr . RPAREN IfBlock ElseStmt

    RPAREN  shift, and go to state 78


state 63

   53 WhileStmt: WHILE LPAREN LogicExpr . RPAREN IfBlock

    RPAREN  shift, and go to state 79


state 64

   11 FuncDecl: FUNC TYPE ID @1 LPAREN . ParamList RPAREN Block

    TYPE  shift, and go to state 80

    $default  reduce using rule 12 (ParamList)

    ParamList  go to state 81
    Param      go to state 82


state 65

   31 Stmt: ID LBRACK NUMBER RBRACK . EQ Expr SEMICOLON

    EQ  shift, and go to state 83


state 66

   30 Stmt: ID LPAREN InputParamList RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 84


state 67

   18 InputParamList: InputParam COMMA . InputParamList

    ID      shift, and go to state 45
    NUMBER  shift, and go to state 46

    $default  reduce using rule 16 (InputParamList)

    InputParamList  go to state 85
    InputParam      go to state 48


state 68

   28 Stmt: ID EQ Expr SEMICOLON .

    $default  reduce using rule 28 (Stmt)


state 69

   41 Expr: ID LBRACK NUMBER . RBRACK

    RBRACK  shift, and go to state 86


state 70

   40 Expr: ID LPAREN InputParamList . RPAREN

    RPAREN  shift, and go to state 87


state 71

   36 Expr: LPAREN TYPE RPAREN . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 88


state 72

   34 Expr: Expr . BinOp Expr
   34     | Expr BinOp Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    MOD       [reduce using rule 34 (Expr)]
    PLUS      [reduce using rule 34 (Expr)]
    MINUS     [reduce using rule 34 (Expr)]
    STAR      [reduce using rule 34 (Expr)]
    BSLASH    [reduce using rule 34 (Expr)]
    $default  reduce using rule 34 (Expr)

    BinOp  go to state 60


state 73

   48 LogicExpr: Expr EQEQ . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 89


state 74

   50 LogicExpr: Expr LT . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 90


state 75

   49 LogicExpr: Expr GT . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 91


state 76

   52 LogicExpr: Expr LTEQ . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 92


state 77

   51 LogicExpr: Expr GTEQ . Expr

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 93


state 78

   54 IfStmt: IF LPAREN LogicExpr RPAREN . IfBlock ElseIfList
   55       | IF LPAREN LogicExpr RPAREN . IfBlock ElseStmt

    LCURBRACK  shift, and go to state 94

    IfBlock  go to state 95


state 79

   53 WhileStmt: WHILE LPAREN LogicExpr RPAREN . IfBlock

    LCURBRACK  shift, and go to state 94

    IfBlock  go to state 96


state 80

   15 Param: TYPE . ID

    ID  shift, and go to state 97


state 81

   11 FuncDecl: FUNC TYPE ID @1 LPAREN ParamList . RPAREN Block

    RPAREN  shift, and go to state 98


state 82

   13 ParamList: Param .
   14          | Param . COMMA ParamList

    COMMA  shift, and go to state 99

    $default  reduce using rule 13 (ParamList)


state 83

   31 Stmt: ID LBRACK NUMBER RBRACK EQ . Expr SEMICOLON

    ID      shift, and go to state 31
    LPAREN  shift, and go to state 32
    BOOL    shift, and go to state 33
    NUMBER  shift, and go to state 34
    FLOAT   shift, and go to state 35

    Expr  go to state 100


state 84

   30 Stmt: ID LPAREN InputParamList RPAREN SEMICOLON .

    $default  reduce using rule 30 (Stmt)


state 85

   18 InputParamList: InputParam COMMA InputParamList .

    $default  reduce using rule 18 (InputParamList)


state 86

   41 Expr: ID LBRACK NUMBER RBRACK .

    $default  reduce using rule 41 (Expr)


state 87

   40 Expr: ID LPAREN InputParamList RPAREN .

    $default  reduce using rule 40 (Expr)


state 88

   34 Expr: Expr . BinOp Expr
   36     | LPAREN TYPE RPAREN Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    MOD       [reduce using rule 36 (Expr)]
    PLUS      [reduce using rule 36 (Expr)]
    MINUS     [reduce using rule 36 (Expr)]
    STAR      [reduce using rule 36 (Expr)]
    BSLASH    [reduce using rule 36 (Expr)]
    $default  reduce using rule 36 (Expr)

    BinOp  go to state 60


state 89

   34 Expr: Expr . BinOp Expr
   48 LogicExpr: Expr EQEQ Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 48 (LogicExpr)

    BinOp  go to state 60


state 90

   34 Expr: Expr . BinOp Expr
   50 LogicExpr: Expr LT Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 50 (LogicExpr)

    BinOp  go to state 60


state 91

   34 Expr: Expr . BinOp Expr
   49 LogicExpr: Expr GT Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 49 (LogicExpr)

    BinOp  go to state 60


state 92

   34 Expr: Expr . BinOp Expr
   52 LogicExpr: Expr LTEQ Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 52 (LogicExpr)

    BinOp  go to state 60


state 93

   34 Expr: Expr . BinOp Expr
   51 LogicExpr: Expr GTEQ Expr .

    MOD     shift, and go to state 55
    PLUS    shift, and go to state 56
    MINUS   shift, and go to state 57
    STAR    shift, and go to state 58
    BSLASH  shift, and go to state 59

    $default  reduce using rule 51 (LogicExpr)

    BinOp  go to state 60


state 94

   60 IfBlock: LCURBRACK . StmtList RCURBRACK

    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 101
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 95

   54 IfStmt: IF LPAREN LogicExpr RPAREN IfBlock . ElseIfList
   55       | IF LPAREN LogicExpr RPAREN IfBlock . ElseStmt

    ELSE  shift, and go to state 102

    $end       reduce using rule 56 (ElseIfList)
    $end       [reduce using rule 58 (ElseStmt)]
    ID         reduce using rule 56 (ElseIfList)
    ID         [reduce using rule 58 (ElseStmt)]
    RCURBRACK  reduce using rule 56 (ElseIfList)
    RCURBRACK  [reduce using rule 58 (ElseStmt)]
    WRITE      reduce using rule 56 (ElseIfList)
    WRITE      [reduce using rule 58 (ElseStmt)]
    RETURN     reduce using rule 56 (ElseIfList)
    RETURN     [reduce using rule 58 (ElseStmt)]
    IF         reduce using rule 56 (ElseIfList)
    IF         [reduce using rule 58 (ElseStmt)]
    ELSE       [reduce using rule 56 (ElseIfList)]
    ELSE       [reduce using rule 58 (ElseStmt)]
    WHILE      reduce using rule 56 (ElseIfList)
    WHILE      [reduce using rule 58 (ElseStmt)]
    BREAK      reduce using rule 56 (ElseIfList)
    BREAK      [reduce using rule 58 (ElseStmt)]
    $default   reduce using rule 56 (ElseIfList)

    ElseIfList  go to state 103
    ElseStmt    go to state 104


state 96

   53 WhileStmt: WHILE LPAREN LogicExpr RPAREN IfBlock .

    $default  reduce using rule 53 (WhileStmt)


state 97

   15 Param: TYPE ID .

    $default  reduce using rule 15 (Param)


state 98

   11 FuncDecl: FUNC TYPE ID @1 LPAREN ParamList RPAREN . Block

    LCURBRACK  shift, and go to state 105

    Block  go to state 106


state 99

   14 ParamList: Param COMMA . ParamList

    TYPE  shift, and go to state 80

    $default  reduce using rule 12 (ParamList)

    ParamList  go to state 107
    Param      go to state 82


state 100

   31 Stmt: ID LBRACK NUMBER RBRACK EQ Expr . SEMICOLON
   34 Expr: Expr . BinOp Expr

    SEMICOLON  shift, and go to state 108
    MOD        shift, and go to state 55
    PLUS       shift, and go to state 56
    MINUS      shift, and go to state 57
    STAR       shift, and go to state 58
    BSLASH     shift, and go to state 59

    BinOp  go to state 60


state 101

   60 IfBlock: LCURBRACK StmtList . RCURBRACK

    RCURBRACK  shift, and go to state 109


state 102

   57 ElseIfList: ELSE . IfStmt ElseIfList
   59 ElseStmt: ELSE . IfBlock

    LCURBRACK  shift, and go to state 94
    IF         shift, and go to state 14

    IfStmt   go to state 110
    IfBlock  go to state 111


state 103

   54 IfStmt: IF LPAREN LogicExpr RPAREN IfBlock ElseIfList .

    $default  reduce using rule 54 (IfStmt)


state 104

   55 IfStmt: IF LPAREN LogicExpr RPAREN IfBlock ElseStmt .

    $default  reduce using rule 55 (IfStmt)


state 105

   21 Block: LCURBRACK . ArrayDeclList VarDeclList StmtList RCURBRACK

    ARRAY  shift, and go to state 112

    $default  reduce using rule 2 (ArrayDeclList)

    ArrayDeclList  go to state 113
    ArrayDecl      go to state 114


state 106

   11 FuncDecl: FUNC TYPE ID @1 LPAREN ParamList RPAREN Block .

    $default  reduce using rule 11 (FuncDecl)


state 107

   14 ParamList: Param COMMA ParamList .

    $default  reduce using rule 14 (ParamList)


state 108

   31 Stmt: ID LBRACK NUMBER RBRACK EQ Expr SEMICOLON .

    $default  reduce using rule 31 (Stmt)


state 109

   60 IfBlock: LCURBRACK StmtList RCURBRACK .

    $default  reduce using rule 60 (IfBlock)


state 110

   57 ElseIfList: ELSE IfStmt . ElseIfList

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 56 (ElseIfList)]
    $default  reduce using rule 56 (ElseIfList)

    ElseIfList  go to state 116


state 111

   59 ElseStmt: ELSE IfBlock .

    $default  reduce using rule 59 (ElseStmt)


state 112

    4 ArrayDecl: ARRAY . TYPE ID LBRACK NUMBER RBRACK SEMICOLON

    TYPE  shift, and go to state 117


state 113

   21 Block: LCURBRACK ArrayDeclList . VarDeclList StmtList RCURBRACK

    $default  reduce using rule 5 (VarDeclList)

    VarDeclList  go to state 118


state 114

    3 ArrayDeclList: ArrayDecl . ArrayDeclList

    ARRAY  shift, and go to state 112

    $default  reduce using rule 2 (ArrayDeclList)

    ArrayDeclList  go to state 119
    ArrayDecl      go to state 114


state 115

   57 ElseIfList: ELSE . IfStmt ElseIfList

    IF  shift, and go to state 14

    IfStmt  go to state 110


state 116

   57 ElseIfList: ELSE IfStmt ElseIfList .

    $default  reduce using rule 57 (ElseIfList)


state 117

    4 ArrayDecl: ARRAY TYPE . ID LBRACK NUMBER RBRACK SEMICOLON

    ID  shift, and go to state 120


state 118

    6 VarDeclList: VarDeclList . VarDecl
   21 Block: LCURBRACK ArrayDeclList VarDeclList . StmtList RCURBRACK

    TYPE    shift, and go to state 4
    ID      shift, and go to state 11
    WRITE   shift, and go to state 12
    RETURN  shift, and go to state 13
    IF      shift, and go to state 14
    WHILE   shift, and go to state 15
    BREAK   shift, and go to state 16

    $default  reduce using rule 24 (StmtList)

    VarDecl     go to state 6
    ReturnStmt  go to state 17
    BreakStmt   go to state 18
    StmtList    go to state 121
    Stmt        go to state 20
    WriteStmt   go to state 21
    WhileStmt   go to state 22
    IfStmt      go to state 23


state 119

    3 ArrayDeclList: ArrayDecl ArrayDeclList .

    $default  reduce using rule 3 (ArrayDeclList)


state 120

    4 ArrayDecl: ARRAY TYPE ID . LBRACK NUMBER RBRACK SEMICOLON

    LBRACK  shift, and go to state 122


state 121

   21 Block: LCURBRACK ArrayDeclList VarDeclList StmtList . RCURBRACK

    RCURBRACK  shift, and go to state 123


state 122

    4 ArrayDecl: ARRAY TYPE ID LBRACK . NUMBER RBRACK SEMICOLON

    NUMBER  shift, and go to state 124


state 123

   21 Block: LCURBRACK ArrayDeclList VarDeclList StmtList RCURBRACK .

    $default  reduce using rule 21 (Block)


state 124

    4 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER . RBRACK SEMICOLON

    RBRACK  shift, and go to state 125


state 125

    4 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK . SEMICOLON

    SEMICOLON  shift, and go to state 126


state 126

    4 ArrayDecl: ARRAY TYPE ID LBRACK NUMBER RBRACK SEMICOLON .

    $default  reduce using rule 4 (ArrayDecl)
